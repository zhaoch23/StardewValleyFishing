plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "7.0.0"
}

group = 'com.zhaoch23'
version = '0.2.1'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
}

dependencies {
    compileOnly "org.projectlombok:lombok:1.18.30"
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    compileOnly(fileTree("libs"))

    implementation "net.objecthunter:exp4j:0.4.8"
    implementation "de.tr7zw:item-nbt-api:2.13.1"

    compileOnly "org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT"
}

shadowJar {
    relocate ("net.objecthunter.exp4j", "com.zhaoch23.shadow.exp4j")
    relocate ("de.tr7zw.item-nbt-api.nbtapi", "com.zhaoch23.shadow.nbtapi")
}

build {
    dependsOn(shadowJar)
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
